Namespace(arch='DN_X', config='../models/architectures/configs/DN4_Vanilla.yaml', dengine=False, refit_dengine=False, dataset_dir='../dataset/StanfordDogs/', data_name='testtttt', mode='test', resume='../results/models/dn4da_miniImageNet_5_5_k3_epoch_16.tar', epochs=0, ngpu=1, print_freq=100, outf='../results/DN_X_testtttt_DN4_5_Way_5_Shot_K1')=> loaded checkpoint '../results/models/dn4da_miniImageNet_5_5_k3_epoch_16.tar' (epoch 6)
DN_X(
  (BACKBONE): FourLayer_64F(
    (features): Sequential(
      (0): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): LeakyReLU(negative_slope=0.2, inplace=True)
      (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (5): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (6): LeakyReLU(negative_slope=0.2, inplace=True)
      (7): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (8): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (9): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (10): LeakyReLU(negative_slope=0.2, inplace=True)
      (11): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (12): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (13): LeakyReLU(negative_slope=0.2, inplace=True)
    )
    (criterion): CrossEntropyLoss()
  )
  (DE): XGBHead()
)
===================================== Round 0 =====================================
Testset: 200-------------0
Test-(6): [100/200]	Time 0.109 (0.130)	Loss 0.963 (1.010)	Prec@1 68.0 (62.81188201904297)
 * Prec@1 62.660 Best_prec1 0.000Test accuracy= 62.65999984741211 h= 1.487838625907898
===================================== Round 1 =====================================
Testset: 200-------------1
Test-(6): [100/200]	Time 0.112 (0.128)	Loss 1.424 (1.004)	Prec@1 42.0 (62.613861083984375)
 * Prec@1 62.160 Best_prec1 62.660Test accuracy= 62.15999984741211 h= 1.3754371404647827
===================================== Round 2 =====================================
Testset: 200-------------2Namespace(arch='DN_X', config='../models/architectures/configs/DN4_Vanilla.yaml', dengine=False, refit_dengine=False, dataset_dir='../dataset/StanfordDogs/', data_name='testtttt', mode='train', resume='../results/models/dn4da_miniImageNet_5_5_k3_epoch_16.tar', epochs=1, ngpu=1, print_freq=100, outf='../results/DN_X_testtttt_DN4_5_Way_5_Shot_K1')=> loaded checkpoint '../results/models/dn4da_miniImageNet_5_5_k3_epoch_16.tar' (epoch 6)
DN_X(
  (BACKBONE): FourLayer_64F(
    (features): Sequential(
      (0): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): LeakyReLU(negative_slope=0.2, inplace=True)
      (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (5): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (6): LeakyReLU(negative_slope=0.2, inplace=True)
      (7): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (8): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (9): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (10): LeakyReLU(negative_slope=0.2, inplace=True)
      (11): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (12): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (13): LeakyReLU(negative_slope=0.2, inplace=True)
    )
    (criterion): CrossEntropyLoss()
  )
  (DE): XGBHead()
)
===================================== Epoch 6 =====================================
Trainset: 8000
Valset: 600
Testset: 200
Eposide-(6): [100/8000]	Time 0.259 (0.280)	Data 0.000 (0.011)	Loss 0.812 (0.745)	Prec@1 70.000 (73.683)
Eposide-(6): [200/8000]	Time 0.264 (0.272)	Data 0.001 (0.006)	Loss 0.765 (0.743)	Prec@1 70.000 (73.443)
Eposide-(6): [300/8000]	Time 0.247 (0.270)	Data 0.001 (0.004)	Loss 0.750 (0.735)	Prec@1 68.000 (73.449)
Namespace(arch='DN_X', config='../models/architectures/configs/DN4_Vanilla.yaml', dengine=False, refit_dengine=False, dataset_dir='../dataset/StanfordDogs/', data_name='testtttt', mode='train', resume='../results/models/dn4da_miniImageNet_5_5_k3_epoch_16.tar', epochs=1, ngpu=1, print_freq=100, outf='../results/DN_X_testtttt_DN4_5_Way_5_Shot_K1')=> loaded checkpoint '../results/models/dn4da_miniImageNet_5_5_k3_epoch_16.tar' (epoch 6)
DN_X(
  (BACKBONE): FourLayer_64F(
    (features): Sequential(
      (0): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): LeakyReLU(negative_slope=0.2, inplace=True)
      (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (5): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (6): LeakyReLU(negative_slope=0.2, inplace=True)
      (7): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (8): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (9): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (10): LeakyReLU(negative_slope=0.2, inplace=True)
      (11): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (12): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (13): LeakyReLU(negative_slope=0.2, inplace=True)
    )
    (criterion): CrossEntropyLoss()
  )
  (DE): XGBHead()
)
===================================== Epoch 6 =====================================
Trainset: 100
Valset: 600
Testset: 200
============ Testing on the test set ============

Test-(7): [100/600]	Time 0.151 (0.167)	Loss 1.148 (1.124)	Prec@1 46.0 (57.52475357055664)

Test-(7): [200/600]	Time 0.168 (0.163)	Loss 1.077 (1.137)	Prec@1 54.0 (57.442787170410156)

Test-(7): [300/600]	Time 0.154 (0.162)	Loss 1.356 (1.148)	Prec@1 50.0 (57.122920989990234)

Test-(7): [400/600]	Time 0.142 (0.161)	Loss 1.138 (1.155)	Prec@1 62.0 (57.10224151611328)

Test-(7): [500/600]	Time 0.163 (0.160)	Loss 1.091 (1.162)	Prec@1 52.0 (56.90618896484375)
 * Prec@1 56.873 Best_prec1 0.000============ Testing on the test set ============

Test-(7): [100/200]	Time 0.155 (0.168)	Loss 1.603 (1.042)	Prec@1 44.0 (62.574256896972656)
 * Prec@1 62.590 Best_prec1 56.873Trainset: 100
Valset: 600
Testset: 200
