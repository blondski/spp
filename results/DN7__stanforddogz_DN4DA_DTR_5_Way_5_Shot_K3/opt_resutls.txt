Namespace(id='', dataset_dir='../dataset/StanfordDogs/', data_name='stanforddogz', mode='train', resume='../results/models/dn7da_stanfordogs_5_5_k3_epoch_27.pth.tar', epochs=0, cuda=True, ngpu=1, nc=3, clamp_lower=-0.01, clamp_upper=0.01, print_freq=100, outf='../results/DN7__stanforddogz_DN4DA_DTR_5_Way_5_Shot_K3')
=> loaded checkpoint '../results/models/dn7da_stanfordogs_5_5_k3_epoch_27.pth.tar' (epoch 27)
DN7DA_DTR(
  (BACKBONE): SevenLayer_64F(
    (features): Sequential(
      (0): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): LeakyReLU(negative_slope=0.2, inplace=True)
      (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (5): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (6): LeakyReLU(negative_slope=0.2, inplace=True)
      (7): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (8): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (9): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (10): LeakyReLU(negative_slope=0.2, inplace=True)
      (11): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (12): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (13): LeakyReLU(negative_slope=0.2, inplace=True)
      (14): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (15): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (16): LeakyReLU(negative_slope=0.2, inplace=True)
      (17): Conv2d(32, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (18): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (19): LeakyReLU(negative_slope=0.2, inplace=True)
      (20): Conv2d(16, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (21): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (22): LeakyReLU(negative_slope=0.2, inplace=True)
      (23): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    )
    (criterion): CrossEntropyLoss()
  )
  (DT): XGBHead()
)
============ validation on the val set ============
Trainset: 10000
Valset: 600
Testset: 600
Test-(0): [100/600]	Time 0.101 (0.108)	Loss 1.165 (1.190)	Prec@1 74.000 (71.485)
Test-(0): [200/600]	Time 0.088 (0.100)	Loss 1.245 (1.191)	Prec@1 66.000 (71.333)
Test-(0): [300/600]	Time 0.076 (0.096)	Loss 1.225 (1.197)	Prec@1 68.000 (70.784)
Test-(0): [400/600]	Time 0.103 (0.095)	Loss 1.365 (1.194)	Prec@1 54.000 (71.082)
Test-(0): [500/600]	Time 0.093 (0.096)	Loss 1.145 (1.193)	Prec@1 76.000 (71.194)
 * Prec@1 71.430 Best_prec1 0.000
============ Testing on the test set ============
Test-(0): [100/600]	Time 0.097 (0.106)	Loss 1.165 (1.151)	Prec@1 74.000 (75.347)
Test-(0): [200/600]	Time 0.067 (0.099)	Loss 1.065 (1.158)	Prec@1 84.000 (74.706)
Test-(0): [300/600]	Time 0.095 (0.097)	Loss 1.085 (1.159)	Prec@1 82.000 (74.558)
Test-(0): [400/600]	Time 0.141 (0.096)	Loss 0.985 (1.162)	Prec@1 92.000 (74.284)
Test-(0): [500/600]	Time 0.120 (0.095)	Loss 1.125 (1.161)	Prec@1 78.000 (74.399)
 * Prec@1 74.290 Best_prec1 0.000
Namespace(id='', dataset_dir='../dataset/StanfordDogs/', data_name='stanforddogz', mode='train', resume='../results/models/dn7da_stanfordogs_5_5_k3_epoch_27.pth.tar', epochs=0, cuda=True, ngpu=1, nc=3, clamp_lower=-0.01, clamp_upper=0.01, print_freq=100, outf='../results/DN7__stanforddogz_DN4DA_DTR_5_Way_5_Shot_K3')
=> loaded checkpoint '../results/models/dn7da_stanfordogs_5_5_k3_epoch_27.pth.tar' (epoch 27)
DN7DA_DTR(
  (BACKBONE): SevenLayer_64F(
    (features): Sequential(
      (0): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): LeakyReLU(negative_slope=0.2, inplace=True)
      (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (5): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (6): LeakyReLU(negative_slope=0.2, inplace=True)
      (7): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (8): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (9): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (10): LeakyReLU(negative_slope=0.2, inplace=True)
      (11): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (12): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (13): LeakyReLU(negative_slope=0.2, inplace=True)
      (14): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (15): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (16): LeakyReLU(negative_slope=0.2, inplace=True)
      (17): Conv2d(32, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (18): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (19): LeakyReLU(negative_slope=0.2, inplace=True)
      (20): Conv2d(16, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (21): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (22): LeakyReLU(negative_slope=0.2, inplace=True)
      (23): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    )
    (criterion): CrossEntropyLoss()
  )
  (DT): XGBHead()
)
============ validation on the val set ============
Trainset: 10000
Valset: 600
Testset: 1000
Namespace(id='', dataset_dir='../dataset/StanfordDogs/', data_name='stanforddogz', mode='train', resume='../results/models/dn7da_stanfordogs_5_5_k3_epoch_27.pth.tar', epochs=0, cuda=True, ngpu=1, nc=3, clamp_lower=-0.01, clamp_upper=0.01, print_freq=100, outf='../results/DN7__stanforddogz_DN4DA_DTR_5_Way_5_Shot_K3')
=> loaded checkpoint '../results/models/dn7da_stanfordogs_5_5_k3_epoch_27.pth.tar' (epoch 27)
DN7DA_DTR(
  (BACKBONE): SevenLayer_64F(
    (features): Sequential(
      (0): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): LeakyReLU(negative_slope=0.2, inplace=True)
      (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (5): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (6): LeakyReLU(negative_slope=0.2, inplace=True)
      (7): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (8): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (9): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (10): LeakyReLU(negative_slope=0.2, inplace=True)
      (11): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (12): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (13): LeakyReLU(negative_slope=0.2, inplace=True)
      (14): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (15): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (16): LeakyReLU(negative_slope=0.2, inplace=True)
      (17): Conv2d(32, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (18): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (19): LeakyReLU(negative_slope=0.2, inplace=True)
      (20): Conv2d(16, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (21): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (22): LeakyReLU(negative_slope=0.2, inplace=True)
      (23): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    )
    (criterion): CrossEntropyLoss()
  )
  (DT): XGBHead()
)
============ validation on the val set ============
Trainset: 10000
Valset: 600
Testset: 1000
Test-(0): [100/600]	Time 0.186 (0.126)	Loss 0.486 (0.702)	Prec@1 80.000 (73.267)
Test-(0): [200/600]	Time 0.116 (0.119)	Loss 0.769 (0.723)	Prec@1 68.000 (72.169)
Test-(0): [300/600]	Time 0.092 (0.115)	Loss 0.612 (0.730)	Prec@1 78.000 (71.801)
Test-(0): [400/600]	Time 0.104 (0.112)	Loss 0.442 (0.737)	Prec@1 84.000 (71.576)
Test-(0): [500/600]	Time 0.075 (0.111)	Loss 0.885 (0.738)	Prec@1 62.000 (71.525)
 * Prec@1 71.720 Best_prec1 0.000
============ Testing on the test set ============
Test-(0): [100/1000]	Time 0.072 (0.115)	Loss 0.449 (0.668)	Prec@1 82.000 (73.564)
Test-(0): [200/1000]	Time 0.079 (0.110)	Loss 0.580 (0.677)	Prec@1 78.000 (73.632)
Test-(0): [300/1000]	Time 0.087 (0.108)	Loss 0.564 (0.664)	Prec@1 76.000 (74.419)
Test-(0): [400/1000]	Time 0.073 (0.108)	Loss 0.808 (0.658)	Prec@1 74.000 (74.823)
Test-(0): [500/1000]	Time 0.135 (0.107)	Loss 0.478 (0.663)	Prec@1 82.000 (74.754)
Test-(0): [600/1000]	Time 0.101 (0.107)	Loss 0.414 (0.660)	Prec@1 90.000 (74.802)
Test-(0): [700/1000]	Time 0.141 (0.107)	Loss 0.587 (0.662)	Prec@1 86.000 (74.790)
Test-(0): [800/1000]	Time 0.146 (0.107)	Loss 0.581 (0.663)	Prec@1 78.000 (74.664)
Test-(0): [900/1000]	Time 0.108 (0.107)	Loss 0.775 (0.666)	Prec@1 70.000 (74.564)
 * Prec@1 74.596 Best_prec1 0.000
Namespace(id='', dataset_dir='../dataset/StanfordDogs/', data_name='stanforddogz', mode='train', resume='../results/models/dn7da_stanfordogs_5_5_k3_epoch_27.pth.tar', epochs=0, cuda=True, ngpu=1, nc=3, clamp_lower=-0.01, clamp_upper=0.01, print_freq=100, outf='../results/DN7__stanforddogz_DN4DA_DTR_5_Way_5_Shot_K3')
=> loaded checkpoint '../results/models/dn7da_stanfordogs_5_5_k3_epoch_27.pth.tar' (epoch 27)
DN7DA_DTR(
  (BACKBONE): SevenLayer_64F(
    (features): Sequential(
      (0): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): LeakyReLU(negative_slope=0.2, inplace=True)
      (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (5): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (6): LeakyReLU(negative_slope=0.2, inplace=True)
      (7): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (8): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (9): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (10): LeakyReLU(negative_slope=0.2, inplace=True)
      (11): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (12): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (13): LeakyReLU(negative_slope=0.2, inplace=True)
      (14): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (15): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (16): LeakyReLU(negative_slope=0.2, inplace=True)
      (17): Conv2d(32, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (18): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (19): LeakyReLU(negative_slope=0.2, inplace=True)
      (20): Conv2d(16, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (21): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (22): LeakyReLU(negative_slope=0.2, inplace=True)
      (23): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    )
    (criterion): CrossEntropyLoss()
  )
  (DT): XGBHead()
)
============ validation on the val set ============
Trainset: 10000
Valset: 600
Testset: 1000
Test-(0): [100/600]	Time 0.080 (0.103)	Loss 1.067 (0.733)	Prec@1 56.000 (71.149)
Test-(0): [200/600]	Time 0.127 (0.099)	Loss 0.738 (0.742)	Prec@1 68.000 (70.935)
Test-(0): [300/600]	Time 0.100 (0.097)	Loss 0.709 (0.740)	Prec@1 72.000 (71.056)
Test-(0): [400/600]	Time 0.090 (0.098)	Loss 0.732 (0.748)	Prec@1 74.000 (70.743)
Test-(0): [500/600]	Time 0.079 (0.100)	Loss 0.652 (0.745)	Prec@1 76.000 (71.034)
 * Prec@1 71.330 Best_prec1 0.000
============ Testing on the test set ============
Test-(0): [100/1000]	Time 0.120 (0.115)	Loss 0.832 (0.644)	Prec@1 60.000 (74.970)
Test-(0): [200/1000]	Time 0.064 (0.104)	Loss 0.606 (0.653)	Prec@1 84.000 (74.796)
Test-(0): [300/1000]	Time 0.093 (0.103)	Loss 0.403 (0.662)	Prec@1 90.000 (74.445)
Test-(0): [400/1000]	Time 0.108 (0.100)	Loss 0.912 (0.658)	Prec@1 68.000 (74.753)
Test-(0): [500/1000]	Time 0.089 (0.099)	Loss 0.941 (0.658)	Prec@1 58.000 (74.683)
Test-(0): [600/1000]	Time 0.094 (0.098)	Loss 0.690 (0.654)	Prec@1 80.000 (74.922)
Test-(0): [700/1000]	Time 0.074 (0.098)	Loss 0.658 (0.656)	Prec@1 68.000 (74.856)
Test-(0): [800/1000]	Time 0.072 (0.097)	Loss 0.469 (0.657)	Prec@1 84.000 (74.911)
Test-(0): [900/1000]	Time 0.072 (0.097)	Loss 0.726 (0.657)	Prec@1 68.000 (74.963)
 * Prec@1 74.994 Best_prec1 0.000
Namespace(id='', dataset_dir='../dataset/StanfordDogs/', data_name='stanforddogz', mode='train', resume='../results/models/dn7da_stanfordogs_5_5_k3_epoch_27.pth.tar', epochs=0, cuda=True, ngpu=1, nc=3, clamp_lower=-0.01, clamp_upper=0.01, print_freq=100, outf='../results/DN7__stanforddogz_DN4DA_DTR_5_Way_5_Shot_K3')
=> loaded checkpoint '../results/models/dn7da_stanfordogs_5_5_k3_epoch_27.pth.tar' (epoch 27)
DN7DA_DTR(
  (BACKBONE): SevenLayer_64F(
    (features): Sequential(
      (0): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): LeakyReLU(negative_slope=0.2, inplace=True)
      (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (5): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (6): LeakyReLU(negative_slope=0.2, inplace=True)
      (7): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (8): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (9): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (10): LeakyReLU(negative_slope=0.2, inplace=True)
      (11): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (12): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (13): LeakyReLU(negative_slope=0.2, inplace=True)
      (14): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (15): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (16): LeakyReLU(negative_slope=0.2, inplace=True)
      (17): Conv2d(32, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (18): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (19): LeakyReLU(negative_slope=0.2, inplace=True)
      (20): Conv2d(16, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (21): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (22): LeakyReLU(negative_slope=0.2, inplace=True)
      (23): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    )
    (criterion): CrossEntropyLoss()
  )
  (DT): XGBHead()
)
============ validation on the val set ============
Trainset: 10000
Valset: 600
Testset: 1000
Test-(0): [100/600]	Time 0.113 (0.109)	Loss 0.617 (0.727)	Prec@1 74.000 (71.762)
Test-(0): [200/600]	Time 0.118 (0.104)	Loss 0.668 (0.736)	Prec@1 76.000 (71.274)
Test-(0): [300/600]	Time 0.135 (0.101)	Loss 0.371 (0.741)	Prec@1 92.000 (71.329)
Namespace(id='', dataset_dir='../dataset/StanfordDogs/', data_name='stanforddogz', mode='train', resume='../results/models/dn7da_stanfordogs_5_5_k3_epoch_27.pth.tar', epochs=0, cuda=True, ngpu=1, nc=3, clamp_lower=-0.01, clamp_upper=0.01, print_freq=100, outf='../results/DN7__stanforddogz_DN4DA_DTR_5_Way_5_Shot_K3')
=> loaded checkpoint '../results/models/dn7da_stanfordogs_5_5_k3_epoch_27.pth.tar' (epoch 27)
DN7DA_DTR(
  (BACKBONE): SevenLayer_64F(
    (features): Sequential(
      (0): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): LeakyReLU(negative_slope=0.2, inplace=True)
      (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (5): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (6): LeakyReLU(negative_slope=0.2, inplace=True)
      (7): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (8): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (9): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (10): LeakyReLU(negative_slope=0.2, inplace=True)
      (11): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (12): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (13): LeakyReLU(negative_slope=0.2, inplace=True)
      (14): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (15): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (16): LeakyReLU(negative_slope=0.2, inplace=True)
      (17): Conv2d(32, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (18): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (19): LeakyReLU(negative_slope=0.2, inplace=True)
      (20): Conv2d(16, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (21): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (22): LeakyReLU(negative_slope=0.2, inplace=True)
      (23): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    )
    (criterion): CrossEntropyLoss()
  )
  (DT): XGBHead()
)
============ validation on the val set ============
Trainset: 10000
Valset: 600
Testset: 1000
Test-(0): [100/600]	Time 0.067 (0.109)	Loss 1.020 (0.762)	Prec@1 64.000 (71.188)
Test-(0): [200/600]	Time 0.069 (0.102)	Loss 0.911 (0.730)	Prec@1 62.000 (72.149)
Test-(0): [300/600]	Time 0.083 (0.099)	Loss 0.306 (0.720)	Prec@1 92.000 (72.352)
Test-(0): [400/600]	Time 0.121 (0.098)	Loss 0.931 (0.731)	Prec@1 54.000 (71.810)
Test-(0): [500/600]	Time 0.102 (0.098)	Loss 0.895 (0.738)	Prec@1 62.000 (71.613)
 * Prec@1 71.500 Best_prec1 0.000
============ Testing on the test set ============
Test-(0): [100/1000]	Time 0.064 (0.111)	Loss 1.014 (0.676)	Prec@1 64.000 (74.455)
Test-(0): [200/1000]	Time 0.095 (0.104)	Loss 0.534 (0.674)	Prec@1 78.000 (74.328)
Test-(0): [300/1000]	Time 0.301 (0.102)	Loss 0.769 (0.666)	Prec@1 74.000 (74.425)
Test-(0): [400/1000]	Time 0.079 (0.099)	Loss 0.539 (0.665)	Prec@1 80.000 (74.344)
Test-(0): [500/1000]	Time 0.122 (0.099)	Loss 0.525 (0.662)	Prec@1 82.000 (74.431)
Test-(0): [600/1000]	Time 0.115 (0.098)	Loss 0.560 (0.663)	Prec@1 78.000 (74.426)
Test-(0): [700/1000]	Time 0.087 (0.098)	Loss 0.564 (0.660)	Prec@1 84.000 (74.613)
Test-(0): [800/1000]	Time 0.073 (0.098)	Loss 0.275 (0.658)	Prec@1 90.000 (74.719)
Test-(0): [900/1000]	Time 0.069 (0.098)	Loss 0.689 (0.659)	Prec@1 72.000 (74.721)
 * Prec@1 74.752 Best_prec1 0.000
Namespace(id='', dataset_dir='../dataset/StanfordDogs/', data_name='stanforddogz', mode='train', resume='../results/models/dn7da_stanfordogs_5_5_k3_epoch_27.pth.tar', epochs=0, cuda=True, ngpu=1, nc=3, clamp_lower=-0.01, clamp_upper=0.01, print_freq=100, outf='../results/DN7__stanforddogz_DN4DA_DTR_5_Way_5_Shot_K3')
=> loaded checkpoint '../results/models/dn7da_stanfordogs_5_5_k3_epoch_27.pth.tar' (epoch 27)
DN7DA_DTR(
  (BACKBONE): SevenLayer_64F(
    (features): Sequential(
      (0): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): LeakyReLU(negative_slope=0.2, inplace=True)
      (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (5): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (6): LeakyReLU(negative_slope=0.2, inplace=True)
      (7): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (8): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (9): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (10): LeakyReLU(negative_slope=0.2, inplace=True)
      (11): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (12): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (13): LeakyReLU(negative_slope=0.2, inplace=True)
      (14): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (15): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (16): LeakyReLU(negative_slope=0.2, inplace=True)
      (17): Conv2d(32, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (18): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (19): LeakyReLU(negative_slope=0.2, inplace=True)
      (20): Conv2d(16, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (21): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (22): LeakyReLU(negative_slope=0.2, inplace=True)
      (23): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    )
    (criterion): CrossEntropyLoss()
  )
  (DT): XGBHead()
)
============ validation on the val set ============
Trainset: 10000
Valset: 600
Testset: 1000
Test-(0): [100/600]	Time 0.112 (0.109)	Loss 0.711 (0.710)	Prec@1 70.000 (72.911)
Test-(0): [200/600]	Time 0.097 (0.102)	Loss 0.993 (0.707)	Prec@1 58.000 (73.154)
Test-(0): [300/600]	Time 0.104 (0.099)	Loss 0.390 (0.707)	Prec@1 88.000 (72.917)
Test-(0): [400/600]	Time 0.100 (0.099)	Loss 0.848 (0.711)	Prec@1 70.000 (72.948)
Test-(0): [500/600]	Time 0.141 (0.098)	Loss 0.678 (0.707)	Prec@1 74.000 (72.878)
 * Prec@1 72.970 Best_prec1 0.000
============ Testing on the test set ============
Test-(0): [100/1000]	Time 0.065 (0.105)	Loss 0.407 (0.626)	Prec@1 88.000 (76.396)
Test-(0): [200/1000]	Time 0.229 (0.106)	Loss 0.730 (0.614)	Prec@1 72.000 (76.527)
Test-(0): [300/1000]	Time 0.110 (0.102)	Loss 1.000 (0.602)	Prec@1 66.000 (77.037)
Test-(0): [400/1000]	Time 0.068 (0.101)	Loss 0.591 (0.606)	Prec@1 76.000 (76.943)
Test-(0): [500/1000]	Time 0.108 (0.100)	Loss 0.435 (0.608)	Prec@1 84.000 (76.838)
Test-(0): [600/1000]	Time 0.106 (0.100)	Loss 0.420 (0.613)	Prec@1 84.000 (76.652)
Test-(0): [700/1000]	Time 0.112 (0.099)	Loss 0.739 (0.607)	Prec@1 68.000 (76.916)
Test-(0): [800/1000]	Time 0.102 (0.099)	Loss 0.543 (0.610)	Prec@1 84.000 (76.854)
Test-(0): [900/1000]	Time 0.079 (0.099)	Loss 0.326 (0.611)	Prec@1 88.000 (76.753)
 * Prec@1 76.706 Best_prec1 0.000
Namespace(id='', dataset_dir='../dataset/StanfordDogs/', data_name='stanforddogz', mode='train', resume='../results/models/dn7da_stanfordogs_5_5_k3_epoch_27.pth.tar', epochs=0, cuda=True, ngpu=1, nc=3, clamp_lower=-0.01, clamp_upper=0.01, print_freq=100, outf='../results/DN7__stanforddogz_DN4DA_DTR_5_Way_5_Shot_K3')
=> loaded checkpoint '../results/models/dn7da_stanfordogs_5_5_k3_epoch_27.pth.tar' (epoch 27)
DN7DA_DTR(
  (BACKBONE): SevenLayer_64F(
    (features): Sequential(
      (0): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): LeakyReLU(negative_slope=0.2, inplace=True)
      (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (5): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (6): LeakyReLU(negative_slope=0.2, inplace=True)
      (7): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (8): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (9): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (10): LeakyReLU(negative_slope=0.2, inplace=True)
      (11): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (12): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (13): LeakyReLU(negative_slope=0.2, inplace=True)
      (14): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (15): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (16): LeakyReLU(negative_slope=0.2, inplace=True)
      (17): Conv2d(32, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (18): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (19): LeakyReLU(negative_slope=0.2, inplace=True)
      (20): Conv2d(16, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (21): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (22): LeakyReLU(negative_slope=0.2, inplace=True)
      (23): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    )
    (criterion): CrossEntropyLoss()
  )
  (DT): XGBHead()
)
============ validation on the val set ============
Trainset: 10000
Valset: 600
Testset: 1000
Test-(0): [100/600]	Time 0.094 (0.113)	Loss 0.538 (0.693)	Prec@1 72.000 (73.762)
Test-(0): [200/600]	Time 0.114 (0.104)	Loss 0.715 (0.697)	Prec@1 74.000 (73.552)
Test-(0): [300/600]	Time 0.063 (0.102)	Loss 0.856 (0.692)	Prec@1 70.000 (73.721)
Test-(0): [400/600]	Time 0.108 (0.100)	Loss 0.403 (0.697)	Prec@1 78.000 (73.287)
Test-(0): [500/600]	Time 0.118 (0.100)	Loss 0.796 (0.698)	Prec@1 66.000 (73.126)
 * Prec@1 72.970 Best_prec1 0.000
============ Testing on the test set ============
Test-(0): [100/1000]	Time 0.107 (0.106)	Loss 0.804 (0.609)	Prec@1 68.000 (77.426)
Test-(0): [200/1000]	Time 0.110 (0.103)	Loss 0.516 (0.602)	Prec@1 84.000 (77.552)
Test-(0): [300/1000]	Time 0.100 (0.101)	Loss 0.479 (0.607)	Prec@1 84.000 (77.468)
Test-(0): [400/1000]	Time 0.088 (0.099)	Loss 0.978 (0.609)	Prec@1 72.000 (77.352)
Test-(0): [500/1000]	Time 0.095 (0.098)	Loss 0.187 (0.616)	Prec@1 96.000 (77.054)
Test-(0): [600/1000]	Time 0.112 (0.098)	Loss 0.525 (0.616)	Prec@1 76.000 (76.922)
Test-(0): [700/1000]	Time 0.075 (0.098)	Loss 0.652 (0.615)	Prec@1 72.000 (76.979)
Test-(0): [800/1000]	Time 0.098 (0.098)	Loss 0.715 (0.615)	Prec@1 72.000 (76.894)
Test-(0): [900/1000]	Time 0.118 (0.098)	Loss 0.507 (0.610)	Prec@1 82.000 (77.094)
 * Prec@1 77.020 Best_prec1 0.000
Namespace(id='', dataset_dir='../dataset/StanfordDogs/', data_name='stanforddogz', mode='train', resume='../results/models/dn7_stanfordogs_5_5_k3_epoch_20.pth.tar', epochs=0, cuda=True, ngpu=1, nc=3, clamp_lower=-0.01, clamp_upper=0.01, print_freq=100, outf='../results/DN7__stanforddogz_DN4DA_DTR_5_Way_5_Shot_K3')
=> loaded checkpoint '../results/models/dn7_stanfordogs_5_5_k3_epoch_20.pth.tar' (epoch 210000)
DN7DA_DTR(
  (BACKBONE): SevenLayer_64F(
    (features): Sequential(
      (0): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): LeakyReLU(negative_slope=0.2, inplace=True)
      (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (5): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (6): LeakyReLU(negative_slope=0.2, inplace=True)
      (7): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (8): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (9): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (10): LeakyReLU(negative_slope=0.2, inplace=True)
      (11): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (12): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (13): LeakyReLU(negative_slope=0.2, inplace=True)
      (14): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (15): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (16): LeakyReLU(negative_slope=0.2, inplace=True)
      (17): Conv2d(32, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (18): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (19): LeakyReLU(negative_slope=0.2, inplace=True)
      (20): Conv2d(16, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (21): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (22): LeakyReLU(negative_slope=0.2, inplace=True)
      (23): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    )
    (criterion): CrossEntropyLoss()
  )
  (DT): XGBHead()
)
============ validation on the val set ============
Trainset: 10000
Valset: 600
Testset: 1000
Test-(0): [100/600]	Time 0.063 (0.106)	Loss 1.119 (0.926)	Prec@1 74.000 (68.515)
Test-(0): [200/600]	Time 0.071 (0.099)	Loss 0.497 (0.933)	Prec@1 82.000 (67.721)
Test-(0): [300/600]	Time 0.065 (0.099)	Loss 0.771 (0.919)	Prec@1 64.000 (67.973)
Test-(0): [400/600]	Time 0.145 (0.098)	Loss 1.455 (0.912)	Prec@1 66.000 (68.180)
Test-(0): [500/600]	Time 0.097 (0.097)	Loss 1.124 (0.909)	Prec@1 66.000 (68.140)
 * Prec@1 68.037 Best_prec1 0.000
============ Testing on the test set ============
Test-(0): [100/1000]	Time 0.131 (0.106)	Loss 0.867 (0.803)	Prec@1 76.000 (72.772)
Test-(0): [200/1000]	Time 0.075 (0.101)	Loss 0.858 (0.773)	Prec@1 66.000 (73.692)
Test-(0): [300/1000]	Time 0.112 (0.099)	Loss 0.632 (0.780)	Prec@1 70.000 (73.176)
Test-(0): [400/1000]	Time 0.101 (0.098)	Loss 0.302 (0.793)	Prec@1 86.000 (72.973)
Test-(0): [500/1000]	Time 0.100 (0.097)	Loss 1.228 (0.799)	Prec@1 54.000 (72.615)
Test-(0): [600/1000]	Time 0.084 (0.098)	Loss 0.484 (0.797)	Prec@1 82.000 (72.845)
Test-(0): [700/1000]	Time 0.117 (0.097)	Loss 0.406 (0.790)	Prec@1 84.000 (73.087)
Test-(0): [800/1000]	Time 0.081 (0.098)	Loss 0.962 (0.788)	Prec@1 64.000 (73.039)
Test-(0): [900/1000]	Time 0.091 (0.098)	Loss 0.559 (0.779)	Prec@1 78.000 (73.314)
 * Prec@1 73.376 Best_prec1 0.000
